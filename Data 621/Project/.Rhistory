knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(kableExtra)
library(dplyr)
library(skimr)
#library(tidytable)
library(corrplot)
library(smotefamily)
library(reshape2)
library(pscl)
library(pROC)
library(caret)
library(xgboost)
og_data <- read.csv('https://github.com/uriahman/621/raw/ac3616703dcb095d458f61b6c4a1e79c66c11eef/Final_Project/bank-additional-full.csv',sep=";")
og_data2 <- read.csv('https://github.com/uriahman/621/raw/ac3616703dcb095d458f61b6c4a1e79c66c11eef/Final_Project/bank-additional.csv',sep=";")
og_training <- rbind(og_data, og_data2)
set.seed(92584)
trainIndex <- createDataPartition(og_training$y, p = .75,
list = FALSE,
times = 1,
)
og_training <- og_training[trainIndex,]
og_testing <- og_training[-trainIndex,]
remove(og_data,og_data2)
og_data <- read.csv('https://github.com/uriahman/621/raw/ac3616703dcb095d458f61b6c4a1e79c66c11eef/Final_Project/bank-additional-full.csv',sep=";")
og_data2 <- read.csv('https://github.com/uriahman/621/raw/ac3616703dcb095d458f61b6c4a1e79c66c11eef/Final_Project/bank-additional.csv',sep=";")
og_training <- rbind(og_data, og_data2)
set.seed(92584)
trainIndex <- createDataPartition(og_training$y, p = .75,
list = FALSE,
times = 1,
)
og_training <- og_training[trainIndex,]
og_testing <- og_training[-trainIndex,]
remove(og_data,og_data2)
og_data <- read.csv('https://github.com/mianshariq/SPS/raw/f279f0eff65425a3ebe48401a458cd472a47e575/bank-additional-full.csv',sep=";")
og_data2 <- read.csv('https://github.com/uriahman/621/raw/ac3616703dcb095d458f61b6c4a1e79c66c11eef/Final_Project/bank-additional.csv',sep=";")
og_training <- rbind(og_data, og_data2)
set.seed(92584)
trainIndex <- createDataPartition(og_training$y, p = .75,
list = FALSE,
times = 1,
)
og_training <- og_training[trainIndex,]
og_testing <- og_training[-trainIndex,]
remove(og_data,og_data2)
og_training <- read.csv('https://github.com/mianshariq/SPS/raw/f279f0eff65425a3ebe48401a458cd472a47e575/bank-additional-full.csv',sep=";")
#og_data2 <- read.csv('https://github.com/uriahman/621/raw/ac3616703dcb095d458f61b6c4a1e79c66c11eef/Final_Project/bank-additional.csv',sep=";")
set.seed(92584)
trainIndex <- createDataPartition(og_training$y, p = .75,
list = FALSE,
times = 1,
)
og_training <- og_training[trainIndex,]
og_testing <- og_training[-trainIndex,]
remove(og_data,og_data2)
og_training <- read.csv('https://github.com/mianshariq/SPS/raw/f279f0eff65425a3ebe48401a458cd472a47e575/bank-additional-full.csv',sep=";")
#og_data2 <- read.csv('https://github.com/uriahman/621/raw/ac3616703dcb095d458f61b6c4a1e79c66c11eef/Final_Project/bank-additional.csv',sep=";")
set.seed(92584)
trainIndex <- createDataPartition(og_training$y, p = .75,
list = FALSE,
times = 1,
)
og_training <- og_training[trainIndex,]
og_testing <- og_training[-trainIndex,]
d <- og_training %>% skim()
d %>% select(.,c(skim_variable,n_missing,complete_rate,numeric.mean,numeric.sd)) %>% kable()
remove(d)
ggplot(og_training,aes(y))+
geom_histogram(stat='count',fill='blue')
for(i in 1:21){
name <- colnames(og_training[i])
if((typeof(og_training[,i]) == 'integer')|| (typeof(og_training[,i]) == 'double')) {
print(ggplot(og_training,aes(og_training[,i]))+
geom_histogram(stat='count',color='blue')+
xlab(name)+
ylab('Frequency'))
}
}
cor_data <- og_training[,c(11,12,13,14,16,17,18,19,20)]
cor_data$y <- as.numeric(as.factor(og_training$y))
cor_t <- cor(cor_data, use = "na.or.complete")
corrplot(cor_t,
type = "lower",
method='number',
order = "original",
tl.col = "black",
tl.srt = 45,
tl.cex = 0.6,
number.cex=.6)
remove(cor_data)
remove(cor_t)
og_training <- subset(og_training, select=-c(emp.var.rate, euribor3m))
og_testing <- subset(og_testing, select=-c(emp.var.rate, euribor3m))
og_training$y <- ifelse(og_training$y == "no",0,1)
og_testing$y <- ifelse(og_testing$y == "no",0,1)
changed_training <- og_training
summary(changed_training$cons.price.idx)
histogram(changed_training$cons.price.idx)
changed_training$cons_price_group <- ifelse(as.numeric(changed_training$cons.price.idx) >= 94,2,ifelse(as.numeric(changed_training$cons.price.idx) <94 & as.numeric(changed_training$cons.price.idx) >=93,1,0))
changed_training$cons_price_group <- as.character(changed_training$cons_price_group)
changed_testing <- og_testing
changed_testing$cons_price_group <- ifelse(as.numeric(changed_testing$cons.price.idx) >= 94,2,ifelse(as.numeric(changed_testing$cons.price.idx) <94 & as.numeric(changed_testing$cons.price.idx) >=93,1,0))
changed_testing$cons_price_group <- as.character(changed_testing$cons_price_group)
ggplot(changed_training,aes(x=cons_price_group))+
geom_histogram(stat='count',fill='blue')
summary(changed_training$cons.conf.idx)
ggplot(changed_training,aes(x=cons.conf.idx))+
geom_histogram(fill='blue')
changed_training$cons_confs_group <- ifelse(as.numeric(changed_training$cons.conf.idx) <= (-45),3,ifelse(as.numeric(changed_training$cons.conf.idx) >= -45 & as.numeric(changed_training$cons.conf.idx)<=(-40),2, ifelse(as.numeric(changed_training$cons.conf.idx) >= -40 & as.numeric(changed_training$cons.conf.idx)<=(-35),1,0)))
changed_training$cons_confs_group <- as.character(changed_training$cons_confs_group)
changed_testing$cons_confs_group <- ifelse(as.numeric(changed_testing$cons.conf.idx) <= (-45),3,ifelse(as.numeric(changed_testing$cons.conf.idx) >= -45 & as.numeric(changed_testing$cons.conf.idx)<=(-40),2, ifelse(as.numeric(changed_testing$cons.conf.idx) >= -40 & as.numeric(changed_testing$cons.conf.idx)<=(-35),1,0)))
changed_testing$cons_confs_group <- as.character(changed_testing$cons_confs_group)
changed_training$cons_confs_group <- ifelse(as.numeric(changed_training$cons.conf.idx) <= (-45),3,ifelse(as.numeric(changed_training$cons.conf.idx) >= -45 & as.numeric(changed_training$cons.conf.idx)<=(-40),2, ifelse(as.numeric(changed_training$cons.conf.idx) >= -40 & as.numeric(changed_training$cons.conf.idx)<=(-35),1,0)))
changed_training$cons_confs_group <- as.character(changed_training$cons_confs_group)
changed_testing$cons_confs_group <- ifelse(as.numeric(changed_testing$cons.conf.idx) <= (-45),3,ifelse(as.numeric(changed_testing$cons.conf.idx) >= -45 & as.numeric(changed_testing$cons.conf.idx)<=(-40),2, ifelse(as.numeric(changed_testing$cons.conf.idx) >= -40 & as.numeric(changed_testing$cons.conf.idx)<=(-35),1,0)))
changed_testing$cons_confs_group <- as.character(changed_testing$cons_confs_group)
ggplot(changed_training,aes(x=cons_confs_group))+
geom_histogram(stat='count',fill='blue')
dummy <- get_dummies.(changed_training)
dummy <- get_dummies.(changed_training)
library(dummies)
library(ggplot2)
library(kableExtra)
library(dplyr)
library(skimr)
#library(tidytable)
library(corrplot)
library(smotefamily)
library(reshape2)
library(pscl)
library(pROC)
library(caret)
library(xgboost)
library(dummies)
library(ggplot2)
library(kableExtra)
library(dplyr)
library(skimr)
#library(tidytable)
library(corrplot)
library(smotefamily)
library(reshape2)
library(pscl)
library(pROC)
library(caret)
library(xgboost)
library(CRAN)
library(ggplot2)
library(kableExtra)
library(dplyr)
library(skimr)
#library(tidytable)
library(corrplot)
library(smotefamily)
library(reshape2)
library(pscl)
library(pROC)
library(caret)
library(xgboost)
library(tidytable)
library(dummies)
dummy <- get_dummies(changed_training)
dummy <- .get_dummies(changed_training)
dummy <- changed_training.get_dummies()
dummy <- get_dummies.changed_training()
dummy <- get_dummies.(changed_training)
dummy <- get_dummies(changed_training)
library(tidytable)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(tidytable)
install.packages(c("backports", "BH", "bit", "blob", "brew", "brio", "broom", "bslib", "callr", "car", "caret", "checkmate", "cli", "clipr", "colorspace", "commonmark", "conflicted", "corrr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "dbscan", "dendextend", "DEoptimR", "desc", "devtools", "dials", "diffobj", "digest", "dplyr", "DT", "dtplyr", "e1071", "evaluate", "expss", "fansi", "farver", "fivethirtyeight", "FNN", "forcats", "foreach", "forecast", "formatR", "fracdiff", "fs", "furrr", "future", "future.apply", "gargle", "generics", "gert", "ggcorrplot", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "ggtext", "gh", "gitcreds", "globals", "glue", "gmailr", "googlesheets4", "gower", "gridtext", "gtable", "gutenbergr", "hardhat", "haven", "heatmaply", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "imputeTS", "infer", "ipred", "isoband", "iterators", "janeaustenr", "jpeg", "jsonlite", "jtools", "knitr", "latticeExtra", "lava", "lhs", "lifecycle", "listenv", "lme4", "lmtest", "lubridate", "magrittr", "maptools", "markdown", "MatrixModels", "matrixStats", "memoise", "mice", "mime", "minqa", "mnormt", "modeldata", "modelr", "openintro", "openssl", "packrat", "parallelly", "parsnip", "patchwork", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "plyr", "png", "pracma", "processx", "progressr", "proxy", "ps", "psych", "purrr", "qap", "qqplotr", "qtl", "quantmod", "R.cache", "R.methodsS3", "R.oo", "R.rsp", "R.utils", "randomForest", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "repr", "reprex", "reshape", "rjson", "rlang", "rmarkdown", "RMySQL", "robustbase", "roxygen2", "rprojroot", "rsample", "rsconnect", "rstatix", "rstudioapi", "rversions", "rvest", "sass", "scales", "seriation", "sessioninfo", "shiny", "skimr", "slam", "slider", "sp", "stringi", "stringr", "svglite", "sys", "systemfonts", "testthat", "textdata", "tibble", "tidymodels", "tidyr", "tidyselect", "tidytable", "tidytext", "tidyverse", "timeDate", "tinytex", "tm", "tokenizers", "tseries", "TSP", "tune", "tzdb", "urca", "usethis", "uuid", "vctrs", "VennDiagram", "viridisLite", "vroom", "waldo", "webshot", "whisker", "withr", "workflows", "workflowsets", "xfun", "xgboost", "XML", "xml2", "xts", "yaml", "yardstick", "zip", "zoo"))
install.packages(c("backports", "BH", "bit", "blob", "brew", "brio", "broom", "bslib", "callr", "car", "caret", "checkmate", "cli", "clipr", "colorspace", "commonmark", "conflicted", "corrr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "dbscan", "dendextend", "DEoptimR", "desc", "devtools", "dials", "diffobj", "digest", "dplyr", "DT", "dtplyr", "e1071", "evaluate", "expss", "fansi", "farver", "fivethirtyeight", "FNN", "forcats", "foreach", "forecast", "formatR", "fracdiff", "fs", "furrr", "future", "future.apply", "gargle", "generics", "gert", "ggcorrplot", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "ggtext", "gh", "gitcreds", "globals", "glue", "gmailr", "googlesheets4", "gower", "gridtext", "gtable", "gutenbergr", "hardhat", "haven", "heatmaply", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "imputeTS", "infer", "ipred", "isoband", "iterators", "janeaustenr", "jpeg", "jsonlite", "jtools", "knitr", "latticeExtra", "lava", "lhs", "lifecycle", "listenv", "lme4", "lmtest", "lubridate", "magrittr", "maptools", "markdown", "MatrixModels", "matrixStats", "memoise", "mice", "mime", "minqa", "mnormt", "modeldata", "modelr", "openintro", "openssl", "packrat", "parallelly", "parsnip", "patchwork", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "plyr", "png", "pracma", "processx", "progressr", "proxy", "ps", "psych", "purrr", "qap", "qqplotr", "qtl", "quantmod", "R.cache", "R.methodsS3", "R.oo", "R.rsp", "R.utils", "randomForest", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "repr", "reprex", "reshape", "rjson", "rlang", "rmarkdown", "RMySQL", "robustbase", "roxygen2", "rprojroot", "rsample", "rsconnect", "rstatix", "rstudioapi", "rversions", "rvest", "sass", "scales", "seriation", "sessioninfo", "shiny", "skimr", "slam", "slider", "sp", "stringi", "stringr", "svglite", "sys", "systemfonts", "testthat", "textdata", "tibble", "tidymodels", "tidyr", "tidyselect", "tidytable", "tidytext", "tidyverse", "timeDate", "tinytex", "tm", "tokenizers", "tseries", "TSP", "tune", "tzdb", "urca", "usethis", "uuid", "vctrs", "VennDiagram", "viridisLite", "vroom", "waldo", "webshot", "whisker", "withr", "workflows", "workflowsets", "xfun", "xgboost", "XML", "xml2", "xts", "yaml", "yardstick", "zip", "zoo"))
install.packages(c("backports", "BH", "bit", "blob", "brew", "brio", "broom", "bslib", "callr", "car", "caret", "checkmate", "cli", "clipr", "colorspace", "commonmark", "conflicted", "corrr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "dbscan", "dendextend", "DEoptimR", "desc", "devtools", "dials", "diffobj", "digest", "dplyr", "DT", "dtplyr", "e1071", "evaluate", "expss", "fansi", "farver", "fivethirtyeight", "FNN", "forcats", "foreach", "forecast", "formatR", "fracdiff", "fs", "furrr", "future", "future.apply", "gargle", "generics", "gert", "ggcorrplot", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "ggtext", "gh", "gitcreds", "globals", "glue", "gmailr", "googlesheets4", "gower", "gridtext", "gtable", "gutenbergr", "hardhat", "haven", "heatmaply", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "imputeTS", "infer", "ipred", "isoband", "iterators", "janeaustenr", "jpeg", "jsonlite", "jtools", "knitr", "latticeExtra", "lava", "lhs", "lifecycle", "listenv", "lme4", "lmtest", "lubridate", "magrittr", "maptools", "markdown", "MatrixModels", "matrixStats", "memoise", "mice", "mime", "minqa", "mnormt", "modeldata", "modelr", "openintro", "openssl", "packrat", "parallelly", "parsnip", "patchwork", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "plyr", "png", "pracma", "processx", "progressr", "proxy", "ps", "psych", "purrr", "qap", "qqplotr", "qtl", "quantmod", "R.cache", "R.methodsS3", "R.oo", "R.rsp", "R.utils", "randomForest", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "repr", "reprex", "reshape", "rjson", "rlang", "rmarkdown", "RMySQL", "robustbase", "roxygen2", "rprojroot", "rsample", "rsconnect", "rstatix", "rstudioapi", "rversions", "rvest", "sass", "scales", "seriation", "sessioninfo", "shiny", "skimr", "slam", "slider", "sp", "stringi", "stringr", "svglite", "sys", "systemfonts", "testthat", "textdata", "tibble", "tidymodels", "tidyr", "tidyselect", "tidytable", "tidytext", "tidyverse", "timeDate", "tinytex", "tm", "tokenizers", "tseries", "TSP", "tune", "tzdb", "urca", "usethis", "uuid", "vctrs", "VennDiagram", "viridisLite", "vroom", "waldo", "webshot", "whisker", "withr", "workflows", "workflowsets", "xfun", "xgboost", "XML", "xml2", "xts", "yaml", "yardstick", "zip", "zoo"))
install.packages(c("backports", "BH", "bit", "blob", "brew", "brio", "broom", "bslib", "callr", "car", "caret", "checkmate", "cli", "clipr", "colorspace", "commonmark", "conflicted", "corrr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "dbscan", "dendextend", "DEoptimR", "desc", "devtools", "dials", "diffobj", "digest", "dplyr", "DT", "dtplyr", "e1071", "evaluate", "expss", "fansi", "farver", "fivethirtyeight", "FNN", "forcats", "foreach", "forecast", "formatR", "fracdiff", "fs", "furrr", "future", "future.apply", "gargle", "generics", "gert", "ggcorrplot", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "ggtext", "gh", "gitcreds", "globals", "glue", "gmailr", "googlesheets4", "gower", "gridtext", "gtable", "gutenbergr", "hardhat", "haven", "heatmaply", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "imputeTS", "infer", "ipred", "isoband", "iterators", "janeaustenr", "jpeg", "jsonlite", "jtools", "knitr", "latticeExtra", "lava", "lhs", "lifecycle", "listenv", "lme4", "lmtest", "lubridate", "magrittr", "maptools", "markdown", "MatrixModels", "matrixStats", "memoise", "mice", "mime", "minqa", "mnormt", "modeldata", "modelr", "openintro", "openssl", "packrat", "parallelly", "parsnip", "patchwork", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "plyr", "png", "pracma", "processx", "progressr", "proxy", "ps", "psych", "purrr", "qap", "qqplotr", "qtl", "quantmod", "R.cache", "R.methodsS3", "R.oo", "R.rsp", "R.utils", "randomForest", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "repr", "reprex", "reshape", "rjson", "rlang", "rmarkdown", "RMySQL", "robustbase", "roxygen2", "rprojroot", "rsample", "rsconnect", "rstatix", "rstudioapi", "rversions", "rvest", "sass", "scales", "seriation", "sessioninfo", "shiny", "skimr", "slam", "slider", "sp", "stringi", "stringr", "svglite", "sys", "systemfonts", "testthat", "textdata", "tibble", "tidymodels", "tidyr", "tidyselect", "tidytable", "tidytext", "tidyverse", "timeDate", "tinytex", "tm", "tokenizers", "tseries", "TSP", "tune", "tzdb", "urca", "usethis", "uuid", "vctrs", "VennDiagram", "viridisLite", "vroom", "waldo", "webshot", "whisker", "withr", "workflows", "workflowsets", "xfun", "xgboost", "XML", "xml2", "xts", "yaml", "yardstick", "zip", "zoo"))
